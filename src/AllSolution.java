public class AllSolution {
}
/*
- Объединить k отсортированные списки

- Определить есть ли цикл в связанном списке

- Вам даны два непустых связанных списка, представляющих два неотрицательных целых числа.
Цифры хранятся в обратном порядке , и каждый из их узлов содержит одну цифру.
Добавьте два числа и верните сумму в виде связанного списка.
Ввод: l1 = [2,4,3], l2 = [5,6,4]
 Вывод: [7,0,8]
 Объяснение: 342 + 465 = 807.

- Перевернуть односвязный список. Учитывая head односвязный список, переверните список и верните перевернутый список.

-Дан массив целых чисел nums, отсортированных в порядке возрастания, и целое число target,
напишите функцию для поиска target в nums. Если target существует, верните его индекс. В противном случае возвращайтесь -1.

-Мы играем в игру «Угадай». Игра выглядит следующим образом: Я выбираю число от 1 до n. Вы должны угадать, какое число я выбрал.

- Поиск 2D-матрицы

- Поиск в отсортированном массиве с поворотом

- Найти минимум в отсортированном массиве с поворотом с уникальными элементами

- Поиск в отсортированном массиве с поворотом с повторяющимися элементами

- Учитывая непустой  массив целых чисел nums, каждый элемент встречается дважды , кроме одного. Найди ту единственную.

- Дан массив целых чисел nums и целое число target, вернуть индексы двух чисел так, чтобы они в сумме составляли target .

- Учитывая массив nums целых nчисел, верните массив всех уникальных четверок, [nums[a], nums[b], nums[c], nums[d]];

- Учитывая массив строк strs, сгруппируйте анаграммы вместе. Вы можете вернуть ответ в любом порядке.

- Даны две строки s и t, вернуть, true если t это анаграмма s, и false в противном случае.

- Учитывая две строки s и p, вернуть массив всех начальных индексов pанаграмм в s . Вы можете вернуть ответ в любом порядке.

- Учитывая строку s, содержащую только символы '(', ')', '{', и '}', определите, допустима ли входная строка.'['']'

-Учитывая m x n двумерную двоичную сетку grid, которая представляет карту '1's (суша) и '0's (вода),
верните число островов.

-Назовем строку хорошей, если в ней нет двух соседних букв, которые различаются только регистром.
Например, строка «abba» хорошая, а строка «aBba» нет.Со строкой можно делать преобразование:

-В этой задаче вам надо определить, подходит ли строка под конкретный шаблон. Шаблон задаётся в следующем формате:
Символ «?» соответствует одному вхождению любого символа;
Символ «*» соответствует произвольному числу любых символов, в том числе нулю символов;

-В этой задаче требуется создать копию связного графа. Оригинальный граф задается одной вершиной.
Вершина содержит свое уникальное значение – value, и список соседей neighbours.
Граф будет считаться копией, если в графе-копии есть связь между вершинами со значениями v1 и v2
 тогда и только тогда, когда она есть в оригинальном графе.

-Вы играете в игру «Монополия++». В этой игре можно купить не более k зданий,
каждое из которых будет добавлять к вашему капиталу какую-то сумму. Всего есть выбор из n зданий.
Чтобы купить здание i, надо иметь текущий капитал хотя бы ci. После покупки здание добавит в ваш текущий капитал сумму pi.

- Вам дана строка s и целое число k. Вы можете выбрать любой символ строки и заменить его на любой другой
заглавный английский символ. Вы можете выполнять эту операцию в большинстве k случаев.
Возвращает длину самой длинной подстроки, содержащей ту же букву,
которую вы можете получить после выполнения вышеуказанных операций .

-Вам дана строка s. Мы хотим разделить строку на как можно больше частей,
чтобы каждая буква встречалась не более чем в одной части.
Обратите внимание, что разбиение сделано таким образом,
что после объединения всех частей по порядку результирующая строка должна быть s.

-Вам дан целочисленный массив height длины n. Нарисованы n вертикальные линии так,
что двумя конечными точками линии являются и .ith(i, 0)(i, height[i])
Найдите две линии, которые вместе с осью абсцисс образуют контейнер, содержащий наибольшее количество воды.

-Вам дана матрица из n строк и m столбцов, заполненная натуральными числами.
По матрице можно перемещаться, из клетки можно уходить только в соседнюю по стороне клетку, переходы по диагонали,
а также выход за границу матрицы запрещены.Ваша задача — найти наиболее длинный возрастающий путь в матрице.
Путь возрастающий, если значения в посещаемых клетках строго возрастают от начала пути к его концу.

-На стол в ряд выложены карточки, на каждой карточке написано натуральное число.
За один ход разрешается взять карточку либо с левого, либо с правого конца ряда.
Всего можно сделать k ходов. Итоговый счет равен сумме чисел на выбранных карточках.
Определите, какой максимальный счет можно получить по итогам игры.

-Вам дан массив натуральных чисел ai. Найдите число таких пар элементов
(ai,aj), где ∣ai−aj∣%200==0 и i < j.

-Назовем строку хорошей, если в ней нет двух соседних букв, которые различаются только регистром.
Например, строка «abba» хорошая, а строка «aBba» нет.Со строкой можно делать преобразование:
если два соседних символа обозначают одну и ту же букву, но записаны в разных регистрах, то их можно удалить.
При этом строка «схлопнется», то есть пробелов при удалении не образуется.
 */
